name: publish(stable release)
on:
  push:
    branches:
      - stable
      - ci

jobs:
  # we want to create release only once, hence indendent from build task.
  create_release:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
         fetch-depth: '0'
      - name: Bump version and push tag
        id: bump_tag
        uses: anothrNick/github-tag-action@1.17.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          WITH_V: true
      # workaround for upload-release-asset does not support variable expansion.
      # see: https://github.com/actions/upload-release-asset/issues/17
      - name: get version
        id: get_version
        # the substitution we use here does not work in windows.
        run: |
          echo ${{ steps.bump_tag.outputs.new_tag }}
          echo ${{ steps.bump_tag.outputs.new_tag }} > version.txt
          echo "::set-output name=VERSION::${{ steps.bump_tag.outputs.new_tag }}"
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          release_name: Release v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: true # TODO: change to false when ready

      - run: |
          echo '${{ steps.create_release.outputs.upload_url }}' > release_upload_url.txt
      - uses: actions/upload-artifact@v1
        with:
          name: create-release
          path: release_upload_url.txt
      - uses: actions/upload-artifact@v1
        with:
          name: get_version
          path: version.txt

  pack_and_push:
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-latest, macos-latest]
        include:
          - os: ubuntu-18.04
            RID: linux
          - os: windows-latest
            RID: win
          - os: macos-latest
            RID: osx
    
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup 3.1.200 .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.200
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('rust-lightning/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('rust-lightning/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: rust-lightning/target
          key: ${{ matrix.os }}-cargo-build-target-${{ hashFiles('rust-lightning/Cargo.lock') }}-${{ hashFiles('rust-lightning/**/src/**') }}

      - name: pack
        run: |
            dotnet pack -p:Configuration=Release src/NRustLightning
          
      # get and set release url and version
      - uses: actions/download-artifact@v1
        with:
          name: create-release
      - uses: actions/download-artifact@v1
        with:
          name: get_version
      - id: upload-url
        run: |
          echo "::set-output name=url::$(cat create-release/release_upload_url.txt)"
      - id: get_version
        run: |
          echo "::set-output name=VERSION::$(cat get_version/version.txt)"

      - name: upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.upload-url.outputs.url }}
          asset_path: ./src/NRustLightning/bin/Release/NRustLightning.${{ steps.get_version.outputs.VERSION }}.nupkg
          asset_name: NRustLightning-${{ matrix.RID }}.${{ steps.get_version.outputs.VERSION }}.nupkg
          asset_content_type: application/zip

